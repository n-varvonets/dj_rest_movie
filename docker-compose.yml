# docker-compose.yml - штука, которая позволяет управлять контейнирами и запускать их поочередно одной командой.
# смысл докера - автоматизация, это делает компоуз.
# порты...   порт_хост_локал_машины:порт_нашего_арр_в_докере

version: '3.3'  # указываем версию докера

services:  # контейнеры, которые мы хотим запустить
  dm_db:  # придуманное нами имя сервиса(оно может быть любое)
    image: postgres:10.20  # указываем наш образ пскл
    volumes:
      - postgres_data:/var/lib/postgresql/data/  # volumes нужен, что бы наши данные сохранялись на локальном пк, т.е.:
# запустили проект с нашей бд, внесли и сохранили какие-то данные, потом выключили контейнер и хуйяк! все! нет наших данных,
# volumes создан для того что бы сохранять данные с запущенного образа и потом обратно их восстанавливать при новом запуске проекта
# /var/lib/postgresql/data/ - это обычный путь где пскл хранит свои бд
#    ports:
#      - 5435:5432  # в сетингс указываем вместо локальных настроек postgresql - настройки для докера postgresql.
      # Зайди посмотри в файл на переменную DATABASE. Эти настройки можно пробрасывать через переменные, но пока через settings.py -> DATABASE
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
  dm_web:  # наш проект
    build: .  # точка говорит где находится наш докер файл, который билдит проект
    command: python /usr/src/dm_rest/manage.py runserver 0.0.0.0:8000  # после того как сбилдили проект, у нас пояивлись файлы, через которые и запускаем наш проект
    volumes:
      - .:/usr/src/dm_rest  # .(точка) - говорит что из хост директриии, где наш докер-компоуз - мы используем
# всю директрию в нашем докере
    ports:
      - 8000:8000
    depends_on:  #  говорим, что наш арр имеет зависимости(к примеру от нашей дб). Т.е. сервис dm_web не может работать без dm_db
      - dm_db

volumes:  #  volumes - это что-то физическое с нашего компа в виртуалку докера
  postgres_data:  # хз как это работает, но это то что в 11 строке